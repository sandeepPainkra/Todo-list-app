{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandeep painkra\\\\Pictures\\\\React_js\\\\React-Js-2021\\\\Reactjs-Projects2021\\\\Projects-from-Youtube\\\\todo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { FormControl, Input, InputLabel } from \"@material-ui/core\";\nimport Todo from \"./Todo\";\nimport FlipMove from \"react-flip-move\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todo, setTodo] = useState([]);\n  const [input, setInput] = useState(\"\");\n  useEffect(() => {\n    db.collection(\"todos\").orderBy(\"timestamp\", \"asc\").onSnapshot(onsnapshot => {\n      setTodo(onsnapshot.docs.map(doc => ({\n        id: doc.id,\n        todo: doc.data().todo\n      })));\n    });\n  }, []);\n\n  const InputEvent = event => {\n    console.log(event.target.value);\n    setInput(event.target.value);\n  };\n\n  const AddTodo = event => {\n    event.preventDefault(); //   add data in database\n\n    db.collection(\"todos\").add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setTodo([...todo, input]);\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo-App\\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"my-input\",\n          children: \"\\u2705Add Todo..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: input,\n          onChange: InputEvent,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !input,\n        onClick: AddTodo,\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"max-width\",\n      children: /*#__PURE__*/_jsxDEV(FlipMove, {\n        children: todo.map(todo => {\n          return /*#__PURE__*/_jsxDEV(Todo, {\n            todo: todo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 26\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"G2IAXb0N8smRMv+zfNjyaFBwWmk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/sandeep painkra/Pictures/React_js/React-Js-2021/Reactjs-Projects2021/Projects-from-Youtube/todo/src/App.js"],"names":["React","useEffect","useState","Button","FormControl","Input","InputLabel","Todo","FlipMove","db","firebase","App","todo","setTodo","input","setInput","collection","orderBy","onSnapshot","onsnapshot","docs","map","doc","id","data","InputEvent","event","console","log","target","value","AddTodo","preventDefault","add","timestamp","firestore","FieldValue","serverTimestamp"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FormControl, Input, InputLabel } from \"@material-ui/core\";\r\nimport Todo from \"./Todo\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nconst App = () => {\r\n   const [todo, setTodo] = useState([]);\r\n   const [input, setInput] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      db.collection(\"todos\")\r\n         .orderBy(\"timestamp\", \"asc\")\r\n         .onSnapshot((onsnapshot) => {\r\n            setTodo(\r\n               onsnapshot.docs.map((doc) => ({\r\n                  id: doc.id,\r\n                  todo: doc.data().todo,\r\n               }))\r\n            );\r\n         });\r\n   }, []);\r\n   const InputEvent = (event) => {\r\n      console.log(event.target.value);\r\n      setInput(event.target.value);\r\n   };\r\n   const AddTodo = (event) => {\r\n      event.preventDefault();\r\n\r\n      //   add data in database\r\n      db.collection(\"todos\").add({\r\n         todo: input,\r\n         timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n      setTodo([...todo, input]);\r\n      setInput(\"\");\r\n   };\r\n\r\n   return (\r\n      <div className=\"app\">\r\n         <h2>Todo-AppðŸš€</h2>\r\n         <br />\r\n         <form>\r\n            <FormControl>\r\n               <InputLabel htmlFor=\"my-input\">âœ…Add Todo..</InputLabel>\r\n               <Input\r\n                  type=\"text\"\r\n                  value={input}\r\n                  onChange={InputEvent}\r\n                  autoComplete=\"off\"\r\n               />\r\n            </FormControl>\r\n            <Button\r\n               disabled={!input}\r\n               onClick={AddTodo}\r\n               type=\"submit\"\r\n               variant=\"contained\"\r\n               color=\"primary\"\r\n            >\r\n               Add Todo\r\n            </Button>\r\n         </form>\r\n         <ul className=\"max-width\">\r\n            <FlipMove>\r\n               {todo.map((todo) => {\r\n                  return <Todo todo={todo} />;\r\n               })}\r\n            </FlipMove>\r\n         </ul>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}